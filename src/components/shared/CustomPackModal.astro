---
const CLICKUP_LIST_ID = "901208081795";
const CLICKUP_TOKEN = "pk_164654581_FYIXK9MP3SYQXODTNIGJQJTZIBE464FO";
---

<div id="customPackModal" class="fixed inset-0 bg-gradient-to-br from-gray-900/60 to-gray-900/80 backdrop-blur-xl hidden z-50 flex items-center justify-center">
    <div class="bg-gradient-to-b from-box-bg/80 to-box-bg/90 backdrop-blur-2xl border border-box-border/30 rounded-3xl p-8 md:p-10 w-11/12 max-w-4xl shadow-2xl transform transition-all duration-500 scale-95 opacity-0 modal-content max-h-[95vh] overflow-hidden flex flex-col">
        <div class="flex justify-between items-center mb-6">
            <h3 class="text-2xl font-semibold text-heading-1">Build Your Custom Pack</h3>
            <button id="closeCustomModal" class="text-heading-3 hover:text-heading-1">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
            </button>
        </div>

        <form id="customPackForm" class="space-y-6 overflow-y-auto pr-4 flex-1">
            <!-- Email Input -->
            <div>
                <label for="email" class="block text-heading-2 mb-2 font-medium">Email Address *</label>
                <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    required
                    class="w-full px-4 py-3 rounded-xl border border-box-border/50 bg-box-bg/50 backdrop-blur-md focus:outline-none focus:ring-2 focus:ring-[#5671FF]/50 transition-all duration-300"
                    placeholder="your@email.com"
                >
            </div>

            <div class="grid md:grid-cols-2 gap-6">
                <!-- Branding Module -->
                <div class="bg-box-bg/30 p-4 rounded-2xl border border-box-border/20">
                    <h4 class="text-lg font-semibold mb-3 text-heading-1">Branding</h4>
                    <div class="space-y-2 text-sm">
                        <label class="flex items-start p-2 rounded-lg hover:bg-box-bg/50 transition-all cursor-pointer">
                            <input type="checkbox" name="branding" value="basic_logo" data-price="150">
                            <span class="ml-2">
                                <span class="block font-medium text-heading-2">Basic Logo Design (150 TND)</span>
                                <span class="text-xs text-heading-3">2 revisions</span>
                            </span>
                        </label>
                        <label class="flex items-start p-2 rounded-lg hover:bg-box-bg/50 transition-all cursor-pointer">
                            <input type="checkbox" name="branding" value="basic_identity" data-price="50">
                            <span class="ml-2">
                                <span class="block font-medium text-heading-2">Basic Brand Identity (50 TND)</span>
                                <span class="text-xs text-heading-3">Color palette, typography</span>
                            </span>
                        </label>
                        <label class="flex items-start p-2 rounded-lg hover:bg-box-bg/50 transition-all cursor-pointer">
                            <input type="checkbox" name="branding" value="social_media" data-price="50">
                            <span class="ml-2">
                                <span class="block font-medium text-heading-2">Social Media Visuals (50 TND)</span>
                                <span class="text-xs text-heading-3">Profile image & banner design</span>
                            </span>
                        </label>
                        <label class="flex items-start p-2 rounded-lg hover:bg-box-bg/50 transition-all cursor-pointer">
                            <input type="checkbox" name="branding" value="standard_upgrade" data-price="150">
                            <span class="ml-2">
                                <span class="block font-medium text-heading-2">Standard Upgrade (+150 TND)</span>
                                <span class="text-xs text-heading-3">Additional features & revisions</span>
                            </span>
                        </label>
                        <label class="flex items-start p-2 rounded-lg hover:bg-box-bg/50 transition-all cursor-pointer">
                            <input type="checkbox" name="branding" value="premium_upgrade" data-price="400">
                            <span class="ml-2">
                                <span class="block font-medium text-heading-2">Premium Upgrade (+400 TND)</span>
                                <span class="text-xs text-heading-3">Comprehensive branding package</span>
                            </span>
                        </label>
                    </div>
                </div>

                <!-- Web Development Module -->
                <div class="bg-box-bg/30 p-4 rounded-2xl border border-box-border/20">
                    <h4 class="text-lg font-semibold mb-3 text-heading-1">Web Development</h4>
                    <div class="space-y-2 text-sm">
                        <label class="flex items-start p-2 rounded-lg hover:bg-box-bg/50 transition-all cursor-pointer">
                            <input type="checkbox" name="web" value="basic_website" data-price="500">
                            <span class="ml-2">
                                <span class="block font-medium text-heading-2">Basic 3-Page Website (500 TND)</span>
                                <span class="text-xs text-heading-3">Home, About, Contact pages</span>
                            </span>
                        </label>
                        <label class="flex items-start p-2 rounded-lg hover:bg-box-bg/50 transition-all cursor-pointer">
                            <input type="checkbox" name="web" value="standard_upgrade" data-price="300">
                            <span class="ml-2">
                                <span class="block font-medium text-heading-2">Standard Upgrade (+300 TND)</span>
                                <span class="text-xs text-heading-3">Additional pages & features</span>
                            </span>
                        </label>
                        <label class="flex items-start p-2 rounded-lg hover:bg-box-bg/50 transition-all cursor-pointer">
                            <input type="checkbox" name="web" value="premium_upgrade" data-price="400">
                            <span class="ml-2">
                                <span class="block font-medium text-heading-2">Premium Upgrade (+400 TND)</span>
                                <span class="text-xs text-heading-3">E-commerce & advanced features</span>
                            </span>
                        </label>
                    </div>
                </div>

                <!-- App Development Module -->
                <div class="bg-box-bg/30 p-4 rounded-2xl border border-box-border/20">
                    <h4 class="text-lg font-semibold mb-3 text-heading-1">App Development</h4>
                    <div class="space-y-2 text-sm">
                        <label class="flex items-start p-2 rounded-lg hover:bg-box-bg/50 transition-all cursor-pointer">
                            <input type="checkbox" name="app" value="basic_app" data-price="850">
                            <span class="ml-2">
                                <span class="block font-medium text-heading-2">Basic App (850 TND)</span>
                                <span class="text-xs text-heading-3">Up to 5 screens</span>
                            </span>
                        </label>
                        <label class="flex items-start p-2 rounded-lg hover:bg-box-bg/50 transition-all cursor-pointer">
                            <input type="checkbox" name="app" value="standard_upgrade" data-price="450">
                            <span class="ml-2">
                                <span class="block font-medium text-heading-2">Standard Upgrade (+450 TND)</span>
                                <span class="text-xs text-heading-3">Additional features</span>
                            </span>
                        </label>
                        <label class="flex items-start p-2 rounded-lg hover:bg-box-bg/50 transition-all cursor-pointer">
                            <input type="checkbox" name="app" value="premium_upgrade" data-price="500">
                            <span class="ml-2">
                                <span class="block font-medium text-heading-2">Premium Upgrade (+500 TND)</span>
                                <span class="text-xs text-heading-3">Advanced features & integrations</span>
                            </span>
                        </label>
                    </div>
                </div>
            </div>

            <!-- Description field -->
            <div>
                <label for="description" class="block text-heading-2 mb-2 font-medium">Project Description (Optional)</label>
                <textarea 
                    id="description" 
                    name="description" 
                    rows="4"
                    class="w-full px-4 py-3 rounded-xl border border-box-border/50 bg-box-bg/50 backdrop-blur-md focus:outline-none focus:ring-2 focus:ring-[#5671FF]/50 transition-all duration-300 dark:text-white text-heading-2 placeholder:text-heading-3"
                    placeholder="Tell us about your specific requirements..."
                ></textarea>
            </div>
        </form>

        <!-- Fixed bottom section with total and submit button -->
        <div class="mt-8 pt-6 border-t border-box-border/20">
            <div class="flex justify-between items-center mb-4">
                <span class="text-xl font-semibold text-heading-1">Total:</span>
                <span class="text-2xl font-bold text-heading-1" id="totalPrice">0 TND</span>
            </div>
            
            <button 
                type="submit"
                form="customPackForm"
                class="w-full px-6 py-3.5 rounded-xl text-center font-medium bg-gradient-to-br from-[#2B3A67] to-[#5671FF] text-white hover:from-[#2B3A67]/90 hover:to-[#5671FF]/90 hover:shadow-lg hover:shadow-[#5671FF]/30 transition-all duration-300 transform hover:scale-[1.02] disabled:opacity-50 disabled:cursor-not-allowed"
            >
                <span class="submit-text">Submit Request</span>
                <span class="loading-text hidden">
                    <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    Processing...
                </span>
                <span class="success-text hidden">
                    <svg class="w-5 h-5 inline-block mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                    Sent Successfully!
                </span>
            </button>
        </div>
    </div>
</div>

<script>
    // Gestionnaire pour le bouton d'ouverture du modal
    document.getElementById('openCustomPackModal')?.addEventListener('click', () => {
        const modal = document.getElementById('customPackModal');
        if (modal) {
            modal.classList.remove('hidden');
            document.body.style.overflow = 'hidden';
            setTimeout(() => {
                modal.querySelector('.modal-content')?.classList.add('show');
            }, 10);
        }
    });
</script>

<script define:vars={{ CLICKUP_LIST_ID, CLICKUP_TOKEN }}>
    function setupModal() {
        const modal = document.getElementById('customPackModal');
        const closeBtn = document.getElementById('closeCustomModal');
        const form = document.getElementById('customPackForm');
        const totalPriceElement = document.getElementById('totalPrice');
        
        if (!modal || !closeBtn || !form || !totalPriceElement) return;

        // Modification ici : sélectionner le bouton avec l'attribut form
        const submitButton = document.querySelector('button[type="submit"][form="customPackForm"]');
        if (!submitButton) {
            console.error('Submit button not found');
            return;
        }

        const submitText = submitButton.querySelector('.submit-text');
        const loadingText = submitButton.querySelector('.loading-text');
        const successText = submitButton.querySelector('.success-text');
        
        if (!submitText || !loadingText || !successText) {
            console.error('One or more text elements not found');
            return;
        }

        function calculateTotal() {
            const checkedBoxes = document.querySelectorAll('input[type="checkbox"]:checked');
            const total = Array.from(checkedBoxes).reduce((sum, checkbox) => {
                return sum + parseInt(checkbox.dataset.price || '0');
            }, 0);
            totalPriceElement.textContent = `${total.toLocaleString()} TND`;
            return total;
        }

        // Event listeners for checkboxes
        document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
            checkbox.addEventListener('change', calculateTotal);
        });

        // Initialize total
        calculateTotal();

        // Modal open/close functionality
        const openBtn = document.getElementById('openCustomPackModal');
        if (openBtn) {
            openBtn.addEventListener('click', () => {
                modal.classList.remove('hidden');
                document.body.style.overflow = 'hidden';
                setTimeout(() => {
                    modal.querySelector('.modal-content').classList.add('show');
                }, 10);
            });
        }

        closeBtn.addEventListener('click', () => {
            modal.classList.add('hidden');
            document.body.style.overflow = 'auto';
            modal.querySelector('.modal-content').classList.remove('show');
        });

        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.classList.add('hidden');
                document.body.style.overflow = 'auto';
                modal.querySelector('.modal-content').classList.remove('show');
            }
        });

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = new FormData(form);
            const email = formData.get('email');
            const description = formData.get('description');

            if (!email) {
                alert('Please enter a valid email address');
                submitButton.disabled = false;
                loadingText.classList.add('hidden');
                submitText.classList.remove('hidden');
                return;
            }

            submitButton.disabled = true;
            submitText.classList.add('hidden');
            loadingText.classList.remove('hidden');
            submitButton.classList.remove('from-[#2B3A67]', 'to-[#5671FF]');
            submitButton.classList.add('from-gray-400', 'to-gray-500');

            const total = calculateTotal();
            
            // Collect selected options with their prices
            const selectedOptions = [];
            document.querySelectorAll('input[type="checkbox"]:checked').forEach(checkbox => {
                const label = checkbox.closest('label');
                if (label) {
                    const optionName = label.querySelector('.font-medium')?.textContent;
                    const price = checkbox.dataset.price;
                    if (optionName) selectedOptions.push(`${optionName} (${price} TND)`);
                }
            });

            try {
                const taskData = {
                    name: `Custom Pack Request - ${email}`,
                    description: `
Custom Pack Configuration:

Selected Options:
${selectedOptions.map(option => `- ${option}`).join('\n')}

Additional Description: 
${description || "No additional description provided"}

Total Price: ${total.toLocaleString()} TND

Contact Email: ${email}`,
                    list_id: CLICKUP_LIST_ID,
                    assignees: [],
                    tags: ["Custom Pack"],
                    status: "TO DO",
                    priority: 3,
                    due_date: 0,
                    due_date_time: false,
                    time_estimate: 0,
                    start_date: 0,
                    start_date_time: false,
                    notify_all: true,
                    parent: null,
                    links_to: null,
                    check_required_custom_fields: true
                };

                const response = await fetch('https://api.clickup.com/api/v2/list/' + CLICKUP_LIST_ID + '/task', {
                    method: 'POST',
                    headers: {
                        'Authorization': CLICKUP_TOKEN,
                        'Content-Type': 'application/json',
                        'Access-Control-Allow-Origin': '*'
                    },
                    body: JSON.stringify(taskData)
                });

                if (!response.ok) throw new Error('Failed to create task');

                loadingText.classList.add('hidden');
                successText.classList.remove('hidden');
                submitButton.classList.remove('from-gray-400', 'to-gray-500');
                submitButton.classList.add('from-green-500', 'to-green-600');

                setTimeout(() => {
                    modal.classList.add('hidden');
                    document.body.style.overflow = 'auto';
                    form.reset();
                    calculateTotal();
                    
                    setTimeout(() => {
                        submitText.classList.remove('hidden');
                        successText.classList.add('hidden');
                        submitButton.disabled = false;
                        submitButton.classList.remove('from-green-500', 'to-green-600');
                        submitButton.classList.add('from-[#2B3A67]', 'to-[#5671FF]');
                    }, 500);
                }, 2000);

            } catch (error) {
                console.error('Error creating task:', error);
                loadingText.classList.add('hidden');
                submitText.classList.remove('hidden');
                submitButton.disabled = false;
                submitButton.classList.remove('from-gray-400', 'to-gray-500');
                submitButton.classList.add('from-[#2B3A67]', 'to-[#5671FF]');
                alert('Please try again later.');
            }
        });
    }

    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', setupModal);
    } else {
        setupModal();
    }
</script>

<style>
    .modal-content {
        transform: scale(0.95);
        opacity: 0;
        transition: all 0.3s ease-in-out;
    }

    .modal-content.show,
    #customPackModal:not(.hidden) .modal-content {
        transform: scale(1);
        opacity: 1;
    }

    /* Custom checkbox styles */
    input[type="checkbox"] {
        width: 1rem;
        height: 1rem;
        border: 2px solid #5671FF;
        border-radius: 4px;
        appearance: none;
        -webkit-appearance: none;
        outline: none;
        cursor: pointer;
        position: relative;
        margin-top: 0.25rem;
    }

    input[type="checkbox"]:checked {
        background-color: #5671FF;
        border-color: #5671FF;
    }

    input[type="checkbox"]:checked::before {
        content: "✓";
        position: absolute;
        color: white;
        font-size: 0.75rem;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
</style> 